/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        cLayer: cLayer {
            compatible = "zmk,behavior-hold-tap";
            label = "CLAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
        };

        zFastLayer: zFastLayer {
            compatible = "zmk,behavior-hold-tap";
            label = "ZFASTLAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
        };

        zHomeMod: zHomeMod {
            compatible = "zmk,behavior-hold-tap";
            label = "ZHOMEMOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };

        zHomeLayer: zHomeLayer {
            compatible = "zmk,behavior-hold-tap";
            label = "ZHOMELAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };

        xTab: xTab {
            compatible = "zmk,behavior-mod-morph";
            label = "XTAB";
            bindings = <&kp LEFT_WIN>, <&kp TAB>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RCTL)>;
            keep-mods = <(MOD_LALT)>;
        };

        xShiftonSpace: xShiftonSpace {
            compatible = "zmk,behavior-mod-morph";
            label = "XSHIFTONSPACE";
            bindings = <&kp SPACE>, <&zFast_Mod LEFT_SHIFT SPACE>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LGUI|MOD_LALT)>;
            keep-mods = <(MOD_LCTL|MOD_LGUI|MOD_LALT)>;
        };

        xEntertab: xEntertab {
            compatible = "zmk,behavior-mod-morph";
            label = "XENTERTAB";
            bindings = <&zFast_Mod LGUI ENTER>, <&kp TAB>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
            keep-mods = <(MOD_LALT)>;
        };

        ySpacecap: ySpacecap {
            compatible = "zmk,behavior-tap-dance";
            label = "YSPACECAP";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&caps_word>;

            tapping-term-ms = <200>;
        };

        yOutput: yOutput {
            compatible = "zmk,behavior-tap-dance";
            label = "YOUTPUT";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&out OUT_BLE>, <&out OUT_USB>;
        };

        xF4: xF4 {
            compatible = "zmk,behavior-mod-morph";
            label = "XF4";
            bindings = <&zFast_Mod LEFT_SHIFT MINUS>, <&kp F4>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
            keep-mods = <(MOD_LALT)>;
        };

        yPower: yPower {
            compatible = "zmk,behavior-tap-dance";
            label = "YPOWER";
            #binding-cells = <0>;
            bindings = <&ext_power EP_ON>, <&ext_power EP_OFF>;

            tapping-term-ms = <300>;
        };

        yBtClear: yBtClear {
            compatible = "zmk,behavior-tap-dance";
            label = "YBTCLEAR";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&none>, <&none>, <&bt BT_CLR>;
        };

        zFast_Mod: zFast_Mod {
            compatible = "zmk,behavior-hold-tap";
            label = "ZFAST_MOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
        };

        yOff: yOff {
            compatible = "zmk,behavior-tap-dance";
            label = "YOFF";
            #binding-cells = <0>;
            bindings = <&kp LG(L)>, <&soft_off>;

            tapping-term-ms = <300>;
        };

        yBacklight: yBacklight {
            compatible = "zmk,behavior-tap-dance";
            label = "YBACKLIGHT";
            #binding-cells = <0>;
            bindings = <&bl BL_ON>, <&bl BL_OFF>;
        };

        yColour: yColour {
            compatible = "zmk,behavior-tap-dance";
            label = "YCOLOUR";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings =
                <&rgb_ug RGB_COLOR_HSB(0,0,58)>,
                <&rgb_ug RGB_COLOR_HSB(269,87,84)>,
                <&rgb_ug RGB_COLOR_HSB(173,36,27)>;
        };

        stickylayer: stickylayer {
            compatible = "zmk,behavior-hold-tap";
            label = "STICKYLAYER";
            bindings = <&mo>, <&sl>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-while-undecided;
        };

        z2layer: z2layer {
            compatible = "zmk,behavior-hold-tap";
            label = "Z2LAYER";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            hold-while-undecided;
            tapping-term-ms = <200>;
        };
    };

    macros {
        ctrl_alt_del: ctrl_alt_del {
            label = "ZM_ctrl_alt_del";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LALT &kp DEL>,
                <&macro_release>,
                <&kp LCTRL &kp LALT &kp DEL>;
        };

        ctrl_shift_esc: ctrl_shift_esc {
            label = "ZM_ctrl_shift_esc";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHIFT &kp ESC>,
                <&macro_release>,
                <&kp LCTRL &kp LSHIFT &kp ESC>;
        };

        lgui_d: lgui_d {
            label = "ZM_lgui_d";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp D>,
                <&macro_release>,
                <&kp LGUI &kp D>;
        };

        lgui_shft_s: lgui_shft_s {
            label = "ZM_lgui_shft_s";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LSHFT &kp S>,
                <&macro_release>,
                <&kp LGUI &kp LSHFT &kp S>;
        };

        lgui_e: lgui_e {
            label = "ZM_lgui_e";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp E>,
                <&macro_release>,
                <&kp LGUI &kp E>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------
            // |  ESC  |  1*  |  2*  |  3*  |     4*    |   5*  |   6*   |    7*    |  8*  |  9*  |   0*  | BSPC  |
            // |  TAB  |  Q   |  W   |  E   |     R     |   T   |   Y    |    U     |  I   |  O   |   P   |   '*  |
            // |   `*  |  A   |  S   |  D   |     F     |   G   |   H    |    J     |  K   |  L   |   ;*  | ENTER |
            // | SHIFT |  Z   |  X   |  C   |     V     |   B   |   N    |    M     |  ,*  |  .*  | UARW  |  /*   |
            // | LCTL  | LGUI | LALT | LOWR | 2uSpace(a)|4uSpace|  N/A** |2uSpace(b)| RAIS | LARW | DARW  | RARW  |

            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3  &kp N4     &kp N5     &kp N6   &kp N7   &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W   &kp F   &kp P      &kp G      &kp J    &kp L    &kp U      &kp Y    &kp SEMI  &kp BSLH
&kp LCTRL  &kp A   &kp R   &kp S   &kp T      &kp D      &kp H    &kp N    &kp E      &kp I    &kp O     &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V      &kp B      &kp K    &kp M    &kp COMMA  &kp DOT  &kp FSLH  &kp GRAVE
&none      &none   &none   &none   &kp SPACE  &kp SPACE  &kp RET  &kp RET  &none      &to 0    &none     &none
            >;
        };

        game {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3  &kp N4     &kp N5     &kp N6   &kp N7   &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W   &kp F   &kp P      &kp G      &kp J    &kp L    &kp U      &kp Y    &kp SEMI  &kp BSLH
&kp LCTRL  &kp A   &kp R   &kp S   &kp T      &kp D      &kp H    &kp N    &kp E      &kp I    &kp O     &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V      &kp B      &kp K    &kp M    &kp COMMA  &kp DOT  &kp FSLH  &kp GRAVE
&none      &none   &none   &none   &kp SPACE  &kp SPACE  &kp RET  &kp RET  &none      &to 0    &none     &none
            >;
        };

        qwerty {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3  &kp N4     &kp N5     &kp N6   &kp N7   &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W   &kp E   &kp R      &kp T      &kp Y    &kp U    &kp I      &kp O    &kp P     &kp BSLH
&kp LCTRL  &kp A   &kp S   &kp D   &kp F      &kp G      &kp H    &kp J    &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V      &kp B      &kp N    &kp M    &kp COMMA  &kp DOT  &kp FSLH  &kp GRAVE
&none      &none   &none   &none   &kp SPACE  &kp SPACE  &kp RET  &kp RET  &none      &to 0    &none     &none
            >;
        };

        sym {
            bindings = <
&kp ESC            &kp N1       &kp N2          &kp N3               &kp N4                &kp N5       &kp N6           &kp N7                &kp N8                 &kp N9      &kp N0         &kp BSPC
&kp TAB            &kp PERCENT  &kp MINUS       &kp LESS_THAN        &kp GREATER_THAN      &kp PLUS     &kp PIPE         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp COLON   &kp SEMICOLON  &none
&kp DOUBLE_QUOTES  &kp LCTRL    &kp DOLLAR      &kp LEFT_BRACKET     &kp RIGHT_BRACKET     &kp AT_SIGN  &kp EXCLAMATION  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EQUAL   &kp ASTERISK   &kp SQT
&none              &kp HASH     &kp UNDERSCORE  &kp AMPERSAND        &kp NON_US_BACKSLASH  &kp GRAVE    &kp TILDE        &kp SLASH             &kp COMMA              &kp PERIOD  &kp QUESTION   &none
&none              &none        &none           &zFastLayer 4 SPACE  &key_repeat           &key_repeat  &kp ENTER        &kp ENTER             &kp LEFT_SHIFT         &to 0       &none          &none
            >;
        };

        num {
            bindings = <
&none      &none   &none   &none   &none  &none  &none  &none  &none  &none  &none  &none
&kp COMMA  &kp N1  &kp N2  &kp N3  &none  &to 0  &none  &none  &none  &none  &none  &none
&kp N0     &kp N4  &kp N5  &kp N6  &none  &none  &none  &none  &none  &none  &none  &none
&kp DOT    &kp N7  &kp N8  &kp N9  &none  &none  &none  &none  &none  &none  &none  &none
&none      &none   &none   &none   &none  &none  &none  &none  &none  &none  &none  &none
            >;
        };

        repeat {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3  &kp N4     &kp N5     &kp N6   &kp N7   &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W   &kp F   &kp P      &kp G      &kp J    &kp L    &kp U      &kp Y    &kp SEMI  &kp BSLH
&kp LCTRL  &kp A   &kp R   &kp S   &kp T      &kp D      &kp H    &kp N    &kp E      &kp I    &kp O     &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V      &kp B      &kp K    &kp M    &kp COMMA  &kp DOT  &kp FSLH  &kp GRAVE
&none      &none   &none   &none   &kp SPACE  &kp SPACE  &kp RET  &kp RET  &none      &to 0    &none     &none
            >;
        };

        fn {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &none  &none     &none     &none   &none
&none  &none  &none  &none  &none  &to 0  &none  &none  &none     &none     &none   &none
&none  &none  &none  &none  &none  &none  &none  &none  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT
&none  &none  &none  &none  &none  &none  &none  &none  &none     &none     &none   &none
&none  &none  &none  &none  &none  &none  &none  &none  &none     &none     &none   &none
            >;
        };

        f1 {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &none  &none     &none     &none   &none
&none  &none  &none  &none  &none  &to 0  &none  &none  &none     &none     &none   &none
&none  &none  &none  &none  &none  &none  &none  &none  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT
&none  &none  &none  &none  &none  &none  &none  &none  &none     &none     &none   &none
&none  &none  &none  &none  &none  &none  &none  &none  &none     &none     &none   &none
            >;
        };
    };
};
